@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject {
  # locationX: int
  # locationY: int
  # speedX: int
  # speedY: int
  # image: BufferedImage
  # width: int
  # height: int
  # isValid: boolean

  + AbstractFlyingObject()
  + AbstractFlyingObject(int, int, int, int)
  + forward(): void
  + crash(AbstractFlyingObject): boolean
  + getLocationX(): int
  + getLocationY(): int
  + setLocation(double, double): void
  + getSpeedY(): int
  + getImage(): BufferedImage
  + getWidth(): int
  + getHeight(): int
  + notValid(): boolean
  + vanish(): void
}

abstract class AbstractAircraft {
  # maxHp: int
  # hp: int

  + AbstractAircraft(int, int, int, int, int)
  + decreaseHp(int): void
  + getHp(): int
  + {abstract} shoot(): List<BaseBullet>
}

class HeroAircraft {
  - shootNum: int
  - power: int
  - direction: int

  + HeroAircraft(int, int, int, int, int)
  + forward(): void
  + shoot(): List<BaseBullet>
  + setHp(int): void
  + getMaxHp(): int
}

class EliteEnemy {
  - shootNum: int
  - power: int
  - direction: int

  + EliteEnemy(int, int, int, int, int)
  + forward(): void
  + shoot(): List<BaseBullet>
}

class MobEnemy {
  + MobEnemy(int, int, int, int, int)
  + forward(): void
  + shoot(): List<BaseBullet>
}

abstract class BaseBullet {
  - power: int

  + BaseBullet(int, int, int, int, int)
  + forward(): void
  + getPower(): int
}

class HeroBullet {
  + HeroBullet(int, int, int, int, int)
}

class EnemyBullet {
  + EnemyBullet(int, int, int, int, int)
}

abstract class AbstractProp {
  + AbstractProp(int, int, int, int)
  + {abstract} active(HeroAircraft): void
}

class BloodProp {
  - addHp: int

  + BloodProp(int, int, int, int)
  + active(HeroAircraft): void
}

class BombProp {
  + BombProp(int, int, int, int)
  + active(HeroAircraft): void
}

class FireProp {
  + FireProp(int, int, int, int)
  + active(HeroAircraft): void
}

' 继承关系
AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- AbstractProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- MobEnemy

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

AbstractProp <|-- BloodProp
AbstractProp <|-- BombProp
AbstractProp <|-- FireProp

' 关联关系
AbstractAircraft --> "0..*" BaseBullet : shoot()
AbstractProp --> HeroAircraft : active()

' 依赖关系
HeroAircraft ..> HeroBullet : creates
EliteEnemy ..> EnemyBullet : creates

@enduml